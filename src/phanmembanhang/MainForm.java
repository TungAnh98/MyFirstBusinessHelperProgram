    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package phanmembanhang;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class MainForm extends javax.swing.JFrame {

    Connection con;
    Statement s;
    ResultSet rs;
    String xSql;
    DefaultTableModel g;

    public MainForm() {
        this.setTitle("AnhPtTool");
        initComponents();
        this.setResizable(false);
        g = (DefaultTableModel) tbl1.getModel();
        this.setLocationRelativeTo(null);
        loadDB();
        xSql = "select * from ReceiveOrder";
        displayResultSet();

    }

    void loadDB() {
        con = DBConnect.getConnection();
        try {
            s = con.createStatement();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    void clearTable() {
        g.setRowCount(0);
    }

    void displayResultSet() {

        String xRoom, xDate;
        int xXucXich, xRedBull, xYellow, xRed, xGia;
        try {
            rs = s.executeQuery(xSql);
            clearTable();
            while (rs.next()) {
                xRoom = new String(rs.getString("Room"));
                
                xRedBull = rs.getInt("RedBull");
                xYellow = rs.getInt("StingVang");
                xRed = rs.getInt("StingDo");
                xGia = rs.getInt("Gia");
                xDate = new String(rs.getString("TimeOrder"));
                g.insertRow(tbl1.getRowCount(), new Object[]{xRoom, xRedBull, xYellow, xRed, xGia, xDate});
            }
            rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRoom = new javax.swing.JTextField();
        txtRedBull = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnDaGiao = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        btnSortDom = new javax.swing.JButton();
        btnSortTime = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtYellow = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRed = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Phòng");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Redbull");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Phần mềm quản lý bán hàng rong");

        txtRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomActionPerformed(evt);
            }
        });

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room", "Red Bull", "Sting Vàng", "Sting Đỏ", "Giá tiền", "Time order"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl1);
        if (tbl1.getColumnModel().getColumnCount() > 0) {
            tbl1.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbl1.getColumnModel().getColumn(1).setPreferredWidth(40);
            tbl1.getColumnModel().getColumn(2).setPreferredWidth(40);
            tbl1.getColumnModel().getColumn(3).setPreferredWidth(40);
            tbl1.getColumnModel().getColumn(4).setPreferredWidth(40);
            tbl1.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnDaGiao.setText("Đã giao");
        btnDaGiao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaGiaoActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnHistory.setText("History");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        btnSortDom.setText("Sắp xếp theo Dom");
        btnSortDom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortDomActionPerformed(evt);
            }
        });

        btnSortTime.setText("Sắp xếp theo thời gian order");
        btnSortTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortTimeActionPerformed(evt);
            }
        });

        jLabel5.setText("Sting Vàng");

        jLabel6.setText("Sting Đỏ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSortDom, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDaGiao, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                        .addGap(163, 163, 163)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 163, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(115, 115, 115)
                                        .addComponent(txtRedBull, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(174, 174, 174)))
                                .addComponent(txtYellow, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRed, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtRedBull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtYellow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnDaGiao)
                    .addComponent(btnXoa))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortDom)
                    .addComponent(btnSortTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHistory)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        HistoryForm hForm = new HistoryForm(this, true);
        hForm.setVisible(true);
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tbl1.getSelectedRow();

        if (row != -1) {
            String xRoom = g.getValueAt(row, 0).toString().trim();
            
            String xRedBull = g.getValueAt(row, 2).toString().trim();
            String xYellow = g.getValueAt(row, 3).toString().trim();
            String xRed = g.getValueAt(row, 4).toString().trim();
            String xGia = g.getValueAt(row, 5).toString().trim();
            int gia = Integer.valueOf(xGia);
            String xDate = g.getValueAt(row, 6).toString().trim();

            try {
                xSql = "delete from ReceiveOrder where Gia = " + xGia + " and Room ='" + xRoom + "'";
                s.execute(xSql);
                xSql = "select * from ReceiveOrder";
                displayResultSet();
            } catch (Exception e) {
                e.printStackTrace();;
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String xRoom = txtRoom.getText().trim();
       
        String xRedBull = txtRedBull.getText().trim();
        String xYellow = txtYellow.getText().trim();
        String xRed = txtRed.getText().trim();
        if (xRoom.length() == 0 
                || !validateInt(xRedBull) || !validateInt(xYellow) || !validateInt(xRed)) {
            JOptionPane.showMessageDialog(null, "Invalid Input");
            return;
        }
        int gia = tinhTien( Integer.valueOf(xRedBull), Integer.valueOf(xYellow), Integer.valueOf(xRed));
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String xDate = dateFormat.format(cal.getTime());
        try {
            xSql = "INSERT INTO ReceiveOrder(Room,XucXich,RedBull,StingVang,StingDo,Gia,TimeOrder) values('" + xRoom + "'"
                     + "," + Integer.valueOf(xRedBull) + ","
                    + Integer.valueOf(xYellow) + "," + Integer.valueOf(xRed) + "," + gia + ",'" + xDate + "')";
            s.execute(xSql);
            xSql = "select * from ReceiveOrder";
            displayResultSet();
            txtRoom.setText("");
          
            txtRedBull.setText("0");
            txtYellow.setText("0");
            txtRed.setText("0");
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSortDomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortDomActionPerformed
        // TODO add your handling code here:
        clearTable();
        xSql = "select * from ReceiveOrder Order by  Room asc";
        displayResultSet();
    }//GEN-LAST:event_btnSortDomActionPerformed

    private void btnSortTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortTimeActionPerformed
        // TODO add your handling code here:
        clearTable();
        xSql = "select * from ReceiveOrder Order by TimeOrder asc";
        displayResultSet();
    }//GEN-LAST:event_btnSortTimeActionPerformed

    private void btnDaGiaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaGiaoActionPerformed
        // TODO add your handling code here:
        int row = tbl1.getSelectedRow();

        if (row != -1) {
            String xRoom = g.getValueAt(row, 0).toString().trim();
            String xXucXich = g.getValueAt(row, 1).toString().trim();
            String xRedBull = g.getValueAt(row, 2).toString().trim();
            String xYellow = g.getValueAt(row, 3).toString().trim();
            String xRed = g.getValueAt(row, 4).toString().trim();
            String xGia = g.getValueAt(row, 5).toString().trim();
            int gia = Integer.valueOf(xGia);
            String xDate = g.getValueAt(row, 6).toString().trim();

            try {
                xSql = "INSERT INTO History(Room,XucXich,RedBull,StingVang,StingDo,Gia,TimeOrder) values('" + xRoom + "',"
                        + Integer.valueOf(xXucXich) + "," + Integer.valueOf(xRedBull) + ","
                        + Integer.valueOf(xYellow) + "," + Integer.valueOf(xRed) + "," + gia + ",'" + xDate + "')";
                s.execute(xSql);
                xSql = "delete from ReceiveOrder where Gia = " + xGia + " and Room ='" + xRoom + "'";
                s.execute(xSql);
                xSql = "select * from ReceiveOrder";
                displayResultSet();

            } catch (Exception e) {
                e.printStackTrace();;
            }
        }

    }//GEN-LAST:event_btnDaGiaoActionPerformed
    public int tinhTien(int RedBull, int Yellow, int Red) {
        int gia = 0;
        gia = RedBull * 12000 + Yellow * 9000 + Red * 10000;
        return gia;
    }

    public boolean validateInt(String sth) {
        if (sth.trim() == null) {
            return false;
        }
        return sth.matches("[0-9]*");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDaGiao;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnSortDom;
    private javax.swing.JButton btnSortTime;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField txtRed;
    private javax.swing.JTextField txtRedBull;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextField txtYellow;
    // End of variables declaration//GEN-END:variables
}
